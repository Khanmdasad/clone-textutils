{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","aboutText","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d520b254.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a href=\"#\" className=\"navbar-brand\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-ds-targer=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\" aria-label=\"Toggle Navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSuppoertedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n            </li> */}\r\n            {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link disabled\" href=\"/\">Disabled</a>\r\n            </li> */}\r\n          </ul>\r\n\r\n\r\n          <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n          </div>\r\n\r\n          {/* <form action=\"\" className=\"d-flex\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About Us'\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was Clicked\", + text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n        // console.log(\"Uppercase was Clicked\", + text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase!\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On Change\");\r\n        setText(event.target.value)\r\n        \r\n    }\r\n\r\n    // const handlecap = () =>{\r\n    //     let newText = text.capitalize();\r\n    //     setText(newText);\r\n    // }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"mybox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied to Clipboard!\",\"success\");\r\n    }\r\n\r\n    const handleClear = () => {\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\",\"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extraspace Removed!\",\"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <textarea className=\"form-control\" value={text} onChange={handleOnChange}\r\n                        style={{\r\n                            backgroundColor: props.mode === 'dark' ? 'grey' : 'white',\r\n                            color: props.mode === 'dark' ? 'white' : '#042743'\r\n                        }} id=\"mybox\" rows=\"8\"></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert To Uppercase</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert To Lowercase</button>\r\n                {/* <button className=\"btn btn-primary mx-1\" onClick={handlecap}>Capitalized</button> */}\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleClear}>Clear</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Space</button>\r\n\r\n            </div>\r\n\r\n            <div className=\"container my-3\" style={{ color: props.mode === 'dark' ? 'white' : '#042743' }}>\r\n\r\n                <h1>Your Text Summary</h1>\r\n                <p>{text.split(\" \").length} Words and {text.length} Charcters</p>\r\n                <p>{0.008 * text.split(\" \").length} Minutes To Read</p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length > 0 ? text : \"Enter Something in the text above to Preview it\"}</p>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm'\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light'); //weather dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    })\n    setTimeout(\n      () => {\n        setAlert(null);\n      }, 2000);\n  }\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Dark Mode';\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\")\n      document.title = 'TextUtils - Light Mode';\n    }\n  }\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\"  aboutText=\"About Us\" /> */}\n      {/* <Navbar/> */}\n      {/* <Router> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n\n      {/* <Switch> */}\n        {/* <Route exact path=\"/about\"> */}\n          {/* <About /> */}\n        {/* </Route> */}\n\n        {/* <Route exact path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter The Text To Analyze Below\" mode={mode} />\n        {/* </Route> */}\n\n      {/* </Switch> */}\n\n        {/* <About/> */}\n      </div>\n      {/* </Router> */}\n    </>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}